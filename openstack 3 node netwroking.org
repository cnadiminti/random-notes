* 3 Node networking (Ignoring the 2 node/legacy/nova networking)
** Configure controller node
*** Prerequisites
    1. Connect to the database as the root user, create the neutron database, and grant the proper access to it:
        #+BEGIN_SRC mysql
        $ mysql -u root -p
        mysql> CREATE DATABASE neutron;
        mysql> GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'NEUTRON_DBPASS';
        mysql> GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'NEUTRON_DBPASS';
        #+END_SRC
    2. Create Identity service credentials for Networking:
        - Create the neutron user:
             #+BEGIN_SRC sh
             keystone user-create --name neutron --pass NEUTRON_PASS --email neutron@example.com
            #+END_SRC
        - Link the neutron user to the service tenant and admin role:
            #+BEGIN_SRC sh
            keystone user-role-add --user neutron --tenant service --role admin
            #+END_SRC
        - Create the neutron service:
            #+BEGIN_SRC sh
            keystone service-create --name neutron --type network --description "OpenStack Networking"
            #+END_SRC
        - Create the service endpoint:
            #+BEGIN_SRC sh
            keystone endpoint-create \
            --service-id $(keystone service-list | awk '/ network / {print $2}') \
            --publicurl http://controller:9696 \
            --adminurl http://controller:9696 \
            --internalurl http://controller:9696
            #+END_SRC
*** To install the Networking components
    #+BEGIN_SRC sh
    yum install openstack-neutron
    yum install openstack-neutron-ml2
    yum install python-neutronclient
    #+END_SRC
*** To configure the Networking server component
     The Networking server component configuration includes the database, authentication mechanism, message broker, topology change notifier, and plug-in.
**** Configure Networking to use the database:
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/neutron.conf database connection mysql://neutron:NEUTRON_DBPASS@controller/neutron
        echo 'Configure Networking to use the Identity service for authentication:'
        openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://controller:5000
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_host controller
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_protocol http
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_port 35357
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_tenant_name service
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_user neutron
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_password NEUTRON_PASS
        #+END_SRC
**** Configure Networking to use the message broker:
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend neutron.openstack.common.rpc.impl_qpid
        openstack-config --set /etc/neutron/neutron.conf DEFAULT qpid_hostname controller
        #+END_SRC
**** Configure Networking to notify Compute about network topology changes:
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes True
        openstack-config --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes True
        openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_url http://controller:8774/v2
        openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_tenant_id $(keystone tenant-list | awk '/ service / { print $2 }')
        openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_password NOVA_PASS
        openstack-config --set /etc/neutron/neutron.conf DEFAULT nova_admin_auth_url http://controller:35357/v2.0
        #+END_SRC
**** Configure Networking to use the Modular Layer 2 (ML2) plug-in and associated services:
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2
        openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins router
        #+END_SRC
***** To configure the Modular Layer 2 (ML2) plug-in the controller node does not need the OVS agent or service because it does not handle instance network traffic.
            #+BEGIN_SRC sh
            openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers gre
            openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types gre
            openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers openvswitch
            openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_gre tunnel_id_ranges 1:1000
            openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
            openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_security_group True
            #+END_SRC
*** To configure Compute to use Networking
        By default, most distributions configure Compute to use legacy networking. You must reconfigure Compute to manage networks through Networking.
        #+BEGIN_SRC sh
        openstack-config --set /etc/nova/nova.conf DEFAULT network_api_class nova.network.neutronv2.api.API
        openstack-config --set /etc/nova/nova.conf DEFAULT neutron_url http://controller:9696
        openstack-config --set /etc/nova/nova.conf DEFAULT neutron_auth_strategy keystone
        openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_tenant_name service
        openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_username neutron
        openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_password NEUTRON_PASS
        openstack-config --set /etc/nova/nova.conf DEFAULT neutron_admin_auth_url http://controller:35357/v2.0
        openstack-config --set /etc/nova/nova.conf DEFAULT linuxnet_interface_driver nova.network.linux_net.LinuxOVSInterfaceDriver
        openstack-config --set /etc/nova/nova.conf DEFAULT firewall_driver nova.virt.firewall.NoopFirewallDriver
        openstack-config --set /etc/nova/nova.conf DEFAULT security_group_api neutron
        #+END_SRC
*** To finalize installation
        The Networking service initialization scripts expect a symbolic link /etc/neutron/plugin.ini pointing to the configuration file associated with your chosen plug-in. 
        Using ML2, for example, the symbolic link must point to /etc/neutron/plugins/ml2/ml2_conf.ini.
        If this symbolic link does not exist, create it using the following commands:
        #+BEGIN_SRC sh
        ln -s plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini
        #+END_SRC
****   Restart the Compute services:
        #+BEGIN_SRC sh
        service openstack-nova-api restart
        service openstack-nova-scheduler restart
        service openstack-nova-conductor restart
        #+END_SRC
****   Start the Networking service and configure it to start when the system boots:
        #+BEGIN_SRC sh
        service neutron-server start
        chkconfig neutron-server on
        #+END_SRC

** Configure network node
*** Prerequisites
    Before you configure OpenStack Networking, you must enable certain kernel networking functions.
    Edit /etc/sysctl.conf to contain the following:
            net.ipv4.ip_forward=1
            net.ipv4.conf.all.rp_filter=0
            net.ipv4.conf.default.rp_filter=0
    sysctl -p
*** To install the Networking components
    #+BEGIN_SRC sh
    yum install openstack-neutron
    yum install openstack-neutron-ml2
    yum install openstack-neutron-openvswitch
    #+END_SRC
*** To configure the Networking common components
**** Configure Networking to use Identity Service
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_uri http://controller:5000
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_host controller
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_protocol http
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken auth_port 35357
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_tenant_name service
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_user neutron
        openstack-config --set /etc/neutron/neutron.conf keystone_authtoken admin_password NEUTRON_PASS
        #+END_SRC
**** Configure Networking to use the message broker
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/neutron.conf DEFAULT rpc_backend neutron.openstack.common.rpc.impl_qpid
        openstack-config --set /etc/neutron/neutron.conf DEFAULT qpid_hostname controller
        echo 'Configure Networking to use ML2'
        openstack-config --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2
        openstack-config --set /etc/neutron/neutron.conf DEFAULT service_plugins router
        #+END_SRC
*** To configure the Layer-3 (L3) agent
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/l3_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
        openstack-config --set /etc/neutron/l3_agent.ini DEFAULT use_namespaces True
        #+END_SRC
*** To configure the DHCP agent
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver neutron.agent.linux.interface.OVSInterfaceDriver
        openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq
        openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT use_namespaces True
        #
        openstack-config --set /etc/neutron/dhcp_agent.ini DEFAULT dnsmasq_config_file /etc/neutron/dnsmasq-neutron.conf
        cat > /etc/neutron/dnsmasq-neutron.conf << EOF
        dhcp-option-force=26,1454
        EOF
        killall dnsmasq
        #+END_SRC
*** To configure the metadata agent
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT auth_url http://controller:5000/v2.0
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT auth_region regionOne
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_tenant_name service
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_user neutron
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT admin_password NEUTRON_PASS
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_ip controller
        openstack-config --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret METADATA_SECRET
        #+END_SRC
*** To configure the Modular Layer 2 (ML2) plug-in
        #+BEGIN_SRC sh
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers gre
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types gre
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers openvswitch
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_gre tunnel_id_ranges 1:1000
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs local_ip INSTANCE_TUNNELS_INTERFACE_IP_ADDRESS
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs tunnel_type gre
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini ovs enable_tunneling True
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
        openstack-config --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_security_group True
        #+END_SRC
*** To configure the Open vSwitch (OVS) service
        #+BEGIN_SRC sh
        service openvswitch start
        ovs-vsctl add-br br-int
        ovs-vsctl add-br br-ex
        ovs-vsctl add-port br-ex INTERFACE_NAME
        #+END_SRC

